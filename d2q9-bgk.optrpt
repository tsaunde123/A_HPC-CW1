Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **))
  -> INLINE: (166,5) usage(const char *)
  -> (200,3) initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)
  -> INLINE: (204,17) calc_ncols_from_rank(int, int, int)
  -> INLINE: (212,18) calc_ncols_from_rank(int, int, int)
  -> INLINE: (214,15) calc_ncols_from_rank(int, int, int)
  -> INLINE: (284,5) timestep(const t_param, t_speed *, t_speed *, int *, t_speed *, int *, int, int, int, int, int, int, int, t_speed *, MPI_Status, int, int)
    -> INLINE: (351,7) accelerate_flow(const t_param, t_speed *, int *, t_speed *, int *, int)
    -> INLINE: (355,7) accelerate_flow(const t_param, t_speed *, int *, t_speed *, int *, int)
    -> INLINE: (359,3) halo_ex(t_speed *, int, int, MPI_Status, int, int, int, int)
    -> INLINE: (362,3) propagate(const t_param, t_speed *, t_speed *, t_speed *, int, int, int, int, int, int, int, t_speed *)
    -> INLINE: (363,3) rebound(const t_param, t_speed *, t_speed *, int *, int, int, int *, t_speed *, int, int, int, t_speed *)
    -> INLINE: (364,3) collision(const t_param, t_speed *, t_speed *, int *, int, int, int *, t_speed *, t_speed *)
  -> INLINE: (286,19) av_velocity(const t_param, t_speed *, int *, int, int, t_speed *, int, int, MPI_Status, int *)
  -> INLINE: (334,41) calc_reynolds(const t_param, t_speed *, int *)
    -> INLINE: (961,10) final_av_velocity(const t_param, t_speed *, int *)
  -> INLINE: (338,3) write_values(const t_param, t_speed *, int *, float *)
    -> INLINE: (996,5) die(const char *, const int, const char *)
    -> INLINE: (1052,5) die(const char *, const int, const char *)
  -> INLINE: (339,3) finalise(const t_param *, t_speed **, t_speed **, int **, float **)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(229,5)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(233,9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(233,9)
   <Remainder>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(243,9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(243,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(257,7)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(257,7)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(261,7)
   remark #25399: memcopy generated

   LOOP BEGIN at d2q9-bgk.c(261,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(261,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(261,7)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(261,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(268,7)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(268,7)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(272,7)
   remark #25399: memcopy generated

   LOOP BEGIN at d2q9-bgk.c(272,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(272,7)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(272,7)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(272,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(282,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(399,3) inlined into d2q9-bgk.c(284,5)
      remark #25460: No loop optimizations reported
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(399,3) inlined into d2q9-bgk.c(284,5)
      remark #25460: No loop optimizations reported
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(744,3) inlined into d2q9-bgk.c(284,5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(744,3) inlined into d2q9-bgk.c(284,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(750,3) inlined into d2q9-bgk.c(284,5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(750,3) inlined into d2q9-bgk.c(284,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(754,3) inlined into d2q9-bgk.c(284,5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(754,3) inlined into d2q9-bgk.c(284,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(760,3) inlined into d2q9-bgk.c(284,5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(760,3) inlined into d2q9-bgk.c(284,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(452,3) inlined into d2q9-bgk.c(284,5)
      remark #25261: Invariant Condition eliminated(Proven True) at line 459

      LOOP BEGIN at d2q9-bgk.c(454,5) inlined into d2q9-bgk.c(284,5)
         remark #25427: Loop Statements Reordered
         remark #25258: Invariant Condition eliminated(Loop at level 3 peeled) at line 459 
         remark #25260: Invariant Condition eliminated(Proven False) at line 459
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(501,3) inlined into d2q9-bgk.c(284,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(503,5) inlined into d2q9-bgk.c(284,5)
         remark #25460: No loop optimizations reported
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(534,3) inlined into d2q9-bgk.c(284,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(536,5) inlined into d2q9-bgk.c(284,5)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at d2q9-bgk.c(613,9) inlined into d2q9-bgk.c(284,5)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at d2q9-bgk.c(544,9) inlined into d2q9-bgk.c(284,5)
            remark #25436: completely unrolled by 9  
         LOOP END

         LOOP BEGIN at d2q9-bgk.c(613,9) inlined into d2q9-bgk.c(284,5)
         <Remainder loop for vectorization>
            remark #25436: completely unrolled by 1  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(638,3) inlined into d2q9-bgk.c(286,19)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(640,5) inlined into d2q9-bgk.c(286,19)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at d2q9-bgk.c(648,9) inlined into d2q9-bgk.c(286,19)
            remark #25436: completely unrolled by 9  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(678,5) inlined into d2q9-bgk.c(286,19)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(296,7)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(296,7)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(301,7)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(301,7)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(308,5)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(311,9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(311,9)
   <Remainder>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(316,9)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(316,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(701,3) inlined into d2q9-bgk.c(334,41)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(703,5) inlined into d2q9-bgk.c(334,41)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(709,9) inlined into d2q9-bgk.c(334,41)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(999,3) inlined into d2q9-bgk.c(338,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(1001,5) inlined into d2q9-bgk.c(338,3)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(1014,9) inlined into d2q9-bgk.c(338,3)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(234,26):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(234,26):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(234,26):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(244,26):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(244,26):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(244,26):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(258,47):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(258,47):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(258,47):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(262,9):remark #34026: call to memcpy implemented as a call to optimized library version
d2q9-bgk.c(269,47):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(269,47):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(269,47):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(273,9):remark #34026: call to memcpy implemented as a call to optimized library version
d2q9-bgk.c(284,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(284,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(359,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(286,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(286,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(297,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(297,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(297,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(302,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(302,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(302,24):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(312,60):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(312,60):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(312,60):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(317,60):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(317,60):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(317,60):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(334,41):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(338,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(138,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:138

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1314
            Global    :     270
            Local     :    1044
        Regenerable   :     189
        Spilled       :      69
        
    Routine stack
        Variables     :     444 bytes*
            Reads     :      94 [3.09e+02 ~ 1.2%]
            Writes    :      38 [1.23e+02 ~ 0.5%]
        Spills        :     504 bytes*
            Reads     :     185 [7.43e+02 ~ 2.8%]
            Writes    :      81 [1.62e+02 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, t_speed *, t_speed *, int *, t_speed *, int *, int, int, int, int, int, int, int, t_speed *, MPI_Status, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, t_speed *, t_speed *, int *, t_speed *, int *, int, int, int, int, int, int, int, t_speed *, MPI_Status, int, int))
  -> INLINE: (351,7) accelerate_flow(const t_param, t_speed *, int *, t_speed *, int *, int)
  -> INLINE: (355,7) accelerate_flow(const t_param, t_speed *, int *, t_speed *, int *, int)
  -> INLINE: (359,3) halo_ex(t_speed *, int, int, MPI_Status, int, int, int, int)
  -> INLINE: (362,3) propagate(const t_param, t_speed *, t_speed *, t_speed *, int, int, int, int, int, int, int, t_speed *)
  -> INLINE: (363,3) rebound(const t_param, t_speed *, t_speed *, int *, int, int, int *, t_speed *, int, int, int, t_speed *)
  -> (364,3) collision(const t_param, t_speed *, t_speed *, int *, int, int, int *, t_speed *, t_speed *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(744,3) inlined into d2q9-bgk.c(359,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(744,3) inlined into d2q9-bgk.c(359,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(750,3) inlined into d2q9-bgk.c(359,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(750,3) inlined into d2q9-bgk.c(359,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(754,3) inlined into d2q9-bgk.c(359,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(754,3) inlined into d2q9-bgk.c(359,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(760,3) inlined into d2q9-bgk.c(359,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(760,3) inlined into d2q9-bgk.c(359,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(452,3) inlined into d2q9-bgk.c(362,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 459

   LOOP BEGIN at d2q9-bgk.c(454,5) inlined into d2q9-bgk.c(362,3)
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 459 
      remark #25260: Invariant Condition eliminated(Proven False) at line 459
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(501,3) inlined into d2q9-bgk.c(363,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(503,5) inlined into d2q9-bgk.c(363,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(359,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(364,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(348,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:348

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :     361
            Global    :      96
            Local     :     265
        Regenerable   :      43
        Spilled       :      24
        
    Routine stack
        Variables     :      20 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       2 [2.00e+00 ~ 0.1%]
        Spills        :     144 bytes*
            Reads     :      32 [4.77e+01 ~ 2.1%]
            Writes    :      19 [3.19e+01 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collision(const t_param, t_speed *, t_speed *, int *, int, int, int *, t_speed *, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collision(const t_param, t_speed *, t_speed *, int *, int, int, int *, t_speed *, t_speed *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(534,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(536,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(544,9)
         remark #25436: completely unrolled by 9  
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(599,9)
         remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(613,9)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(524,1):remark #34051: REGISTER ALLOCATION : [collision] d2q9-bgk.c:524

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rbp rsi rdi r8-r11 r14-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     163
            Global    :      32
            Local     :     131
        Regenerable   :      16
        Spilled       :       4
        
    Routine stack
        Variables     :      72 bytes*
            Reads     :       3 [3.75e+01 ~ 1.8%]
            Writes    :      14 [1.75e+02 ~ 8.5%]
        Spills        :      32 bytes*
            Reads     :       4 [3.60e+00 ~ 0.2%]
            Writes    :       4 [3.60e+00 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: accelerate_flow(const t_param, t_speed *, int *, t_speed *, int *, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (accelerate_flow(const t_param, t_speed *, int *, t_speed *, int *, int))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(369,1):remark #34051: REGISTER ALLOCATION : [accelerate_flow] d2q9-bgk.c:369

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rsi rdi r8-r10 zmm0-zmm8]
        
    Routine temporaries
        Total         :      50
            Global    :      21
            Local     :      29
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: propagate(const t_param, t_speed *, t_speed *, t_speed *, int, int, int, int, int, int, int, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (propagate(const t_param, t_speed *, t_speed *, t_speed *, int, int, int, int, int, int, int, t_speed *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(452,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 459

   LOOP BEGIN at d2q9-bgk.c(454,5)
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 459 
      remark #25260: Invariant Condition eliminated(Proven False) at line 459
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(426,1):remark #34051: REGISTER ALLOCATION : [propagate] d2q9-bgk.c:426

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rbp rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     105
            Global    :      31
            Local     :      74
        Regenerable   :       7
        Spilled       :      15
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      96 bytes*
            Reads     :      19 [4.52e+01 ~ 3.4%]
            Writes    :      13 [3.13e+01 ~ 2.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: rebound(const t_param, t_speed *, t_speed *, int *, int, int, int *, t_speed *, int, int, int, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (rebound(const t_param, t_speed *, t_speed *, int *, int, int, int *, t_speed *, int, int, int, t_speed *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(478,1):remark #34051: REGISTER ALLOCATION : [rebound] d2q9-bgk.c:478

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15]
        
    Routine temporaries
        Total         :      44
            Global    :      21
            Local     :      23
        Regenerable   :       6
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.50e+00 ~ 0.9%]
            Writes    :       5 [4.50e+00 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: av_velocity(const t_param, t_speed *, int *, int, int, t_speed *, int, int, MPI_Status, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (av_velocity(const t_param, t_speed *, int *, int, int, t_speed *, int, int, MPI_Status, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(638,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(640,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(648,9)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(628,1):remark #34051: REGISTER ALLOCATION : [av_velocity] d2q9-bgk.c:628

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     107
            Global    :      31
            Local     :      76
        Regenerable   :      32
        Spilled       :       5
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :       4 [1.80e+01 ~ 2.1%]
            Writes    :       6 [9.21e+00 ~ 1.1%]
        Spills        :      16 bytes*
            Reads     :       2 [1.80e+00 ~ 0.2%]
            Writes    :       2 [1.80e+00 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: final_av_velocity(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (final_av_velocity(const t_param, t_speed *, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(701,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(703,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(709,9)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(695,1):remark #34051: REGISTER ALLOCATION : [final_av_velocity] d2q9-bgk.c:695

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8-r11 r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :      64
            Global    :      22
            Local     :      42
        Regenerable   :       5
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.70e+00 ~ 0.4%]
            Writes    :       3 [2.70e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: halo_ex(t_speed *, int, int, MPI_Status, int, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (halo_ex(t_speed *, int, int, MPI_Status, int, int, int, int))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(744,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(744,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(750,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(750,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(754,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(754,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(760,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(760,3)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(745,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(751,22):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(755,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(761,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(739,1):remark #34051: REGISTER ALLOCATION : [halo_ex] d2q9-bgk.c:739

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     165
            Global    :      37
            Local     :     128
        Regenerable   :       9
        Spilled       :      11
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       6 [6.00e+00 ~ 1.5%]
            Writes    :       5 [5.00e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_ncols_from_rank(int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_ncols_from_rank(int, int, int))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(922,1):remark #34051: REGISTER ALLOCATION : [calc_ncols_from_rank] d2q9-bgk.c:922

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      10
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: finalise(const t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (finalise(const t_param *, t_speed **, t_speed **, int **, float **))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(937,1):remark #34051: REGISTER ALLOCATION : [finalise] d2q9-bgk.c:937

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r8 r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      10
            Local     :      14
        Regenerable   :       1
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_reynolds(const t_param, t_speed *, int *))
  -> INLINE: (961,10) final_av_velocity(const t_param, t_speed *, int *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(701,3) inlined into d2q9-bgk.c(961,10)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(703,5) inlined into d2q9-bgk.c(961,10)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(709,9) inlined into d2q9-bgk.c(961,10)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(958,1):remark #34051: REGISTER ALLOCATION : [calc_reynolds] d2q9-bgk.c:958

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rbp rsi rdi r8-r11 r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :      71
            Global    :      23
            Local     :      48
        Regenerable   :       7
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.70e+00 ~ 0.4%]
            Writes    :       3 [2.70e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: total_density(const t_param, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (total_density(const t_param, t_speed *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(968,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(970,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(972,7)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(972,7)
      <Remainder loop for vectorization>
         remark #25436: completely unrolled by 1  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(965,1):remark #34051: REGISTER ALLOCATION : [total_density] d2q9-bgk.c:965

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm4]
        
    Routine temporaries
        Total         :      32
            Global    :      19
            Local     :      13
        Regenerable   :       3
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, t_speed *, int *, float *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, t_speed *, int *, float *))
  -> INLINE: (996,5) die(const char *, const int, const char *)
  -> INLINE: (1052,5) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(999,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(1001,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(1014,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(983,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:983

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     147
            Global    :      39
            Local     :     108
        Regenerable   :      47
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      64 bytes*
            Reads     :       9 [8.23e+01 ~ 5.8%]
            Writes    :       8 [2.16e+01 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: die(const char *, const int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (die(const char *, const int, const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1066,1):remark #34051: REGISTER ALLOCATION : [die] d2q9-bgk.c:1066

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      28
            Global    :       1
            Local     :      27
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage(const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(1074,1):remark #34051: REGISTER ALLOCATION : [usage] d2q9-bgk.c:1074

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       0
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **))
  -> INLINE: (781,5) die(const char *, const int, const char *)
  -> INLINE: (787,20) die(const char *, const int, const char *)
  -> INLINE: (791,20) die(const char *, const int, const char *)
  -> INLINE: (795,20) die(const char *, const int, const char *)
  -> INLINE: (799,20) die(const char *, const int, const char *)
  -> INLINE: (803,20) die(const char *, const int, const char *)
  -> INLINE: (807,20) die(const char *, const int, const char *)
  -> INLINE: (811,20) die(const char *, const int, const char *)
  -> INLINE: (839,29) die(const char *, const int, const char *)
  -> INLINE: (844,33) die(const char *, const int, const char *)
  -> INLINE: (849,33) die(const char *, const int, const char *)
  -> INLINE: (890,5) die(const char *, const int, const char *)
  -> INLINE: (897,22) die(const char *, const int, const char *)
  -> INLINE: (899,40) die(const char *, const int, const char *)
  -> INLINE: (901,40) die(const char *, const int, const char *)
  -> INLINE: (903,23) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(856,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Distributed chunk1>
      remark #25426: Loop Distributed (6 way) 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Remainder, Distributed chunk1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Distributed chunk2>
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Remainder, Distributed chunk2>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Distributed chunk3>
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Remainder, Distributed chunk3>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Distributed chunk4>
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Remainder, Distributed chunk4>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Distributed chunk5>
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Remainder, Distributed chunk5>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Distributed chunk6>
      remark #25439: unrolled with remainder by 2  

      LOOP BEGIN at d2q9-bgk.c(868,9)
         remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(858,5)
   <Remainder, Distributed chunk6>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(876,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(878,5)
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(768,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:768

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     534
            Global    :      83
            Local     :     451
        Regenerable   :     240
        Spilled       :       7
        
    Routine stack
        Variables     :    1036 bytes*
            Reads     :       3 [1.63e+01 ~ 1.1%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [3.70e-02 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
