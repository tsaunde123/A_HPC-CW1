Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **))
  -> INLINE: (156,5) usage(const char *)
  -> INLINE: (165,3) initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)
    -> INLINE: (539,5) die(const char *, const int, const char *)
    -> INLINE: (545,20) die(const char *, const int, const char *)
    -> INLINE: (549,20) die(const char *, const int, const char *)
    -> INLINE: (553,20) die(const char *, const int, const char *)
    -> INLINE: (557,20) die(const char *, const int, const char *)
    -> INLINE: (561,20) die(const char *, const int, const char *)
    -> INLINE: (565,20) die(const char *, const int, const char *)
    -> INLINE: (569,20) die(const char *, const int, const char *)
    -> INLINE: (596,27) die(const char *, const int, const char *)
    -> INLINE: (601,31) die(const char *, const int, const char *)
    -> INLINE: (606,31) die(const char *, const int, const char *)
    -> INLINE: (647,5) die(const char *, const int, const char *)
    -> INLINE: (654,22) die(const char *, const int, const char *)
    -> INLINE: (656,40) die(const char *, const int, const char *)
    -> INLINE: (658,40) die(const char *, const int, const char *)
    -> INLINE: (660,23) die(const char *, const int, const char *)
  -> INLINE: (178,5) timestep(const t_param, t_speed *, t_speed *, int *, int, int)
    -> INLINE: (213,3) accelerate_flow(const t_param, t_speed *, int *)
    -> (214,3) propagate(const t_param, t_speed *, t_speed *, int, int)
    -> INLINE: (215,3) rebound(const t_param, t_speed *, t_speed *, int *)
    -> INLINE: (216,3) collision(const t_param, t_speed *, t_speed *, int *)
  -> INLINE: (179,19) av_velocity(const t_param, t_speed *, int *)
  -> INLINE: (200,41) calc_reynolds(const t_param, t_speed *, int *)
    -> INLINE: (717,10) av_velocity(const t_param, t_speed *, int *)
  -> INLINE: (204,3) write_values(const t_param, t_speed *, int *, float *)
    -> INLINE: (752,5) die(const char *, const int, const char *)
    -> INLINE: (808,5) die(const char *, const int, const char *)
  -> INLINE: (205,3) finalise(const t_param *, t_speed **, t_speed **, int **, float **)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(613,3) inlined into d2q9-bgk.c(165,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(615,5) inlined into d2q9-bgk.c(165,3)
      remark #25439: unrolled with remainder by 2  

      LOOP BEGIN at d2q9-bgk.c(625,9) inlined into d2q9-bgk.c(165,3)
         remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5) inlined into d2q9-bgk.c(165,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(633,3) inlined into d2q9-bgk.c(165,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(635,5) inlined into d2q9-bgk.c(165,3)
      remark #25408: memset generated

      LOOP BEGIN at d2q9-bgk.c(635,5) inlined into d2q9-bgk.c(165,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(635,5) inlined into d2q9-bgk.c(165,3)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(635,5) inlined into d2q9-bgk.c(165,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(176,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(229,3) inlined into d2q9-bgk.c(178,5)
      remark #25460: No loop optimizations reported
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(345,3) inlined into d2q9-bgk.c(178,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(347,5) inlined into d2q9-bgk.c(178,5)
         remark #25460: No loop optimizations reported
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(380,3) inlined into d2q9-bgk.c(178,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(382,5) inlined into d2q9-bgk.c(178,5)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at d2q9-bgk.c(459,9) inlined into d2q9-bgk.c(178,5)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at d2q9-bgk.c(390,9) inlined into d2q9-bgk.c(178,5)
            remark #25436: completely unrolled by 9  
         LOOP END

         LOOP BEGIN at d2q9-bgk.c(459,9) inlined into d2q9-bgk.c(178,5)
         <Remainder loop for vectorization>
            remark #25436: completely unrolled by 1  
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(481,3) inlined into d2q9-bgk.c(179,19)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(483,5) inlined into d2q9-bgk.c(179,19)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at d2q9-bgk.c(491,9) inlined into d2q9-bgk.c(179,19)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at d2q9-bgk.c(491,9) inlined into d2q9-bgk.c(179,19)
         <Remainder loop for vectorization>
            remark #25436: completely unrolled by 1  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(481,3) inlined into d2q9-bgk.c(200,41)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(483,5) inlined into d2q9-bgk.c(200,41)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(491,9) inlined into d2q9-bgk.c(200,41)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(755,3) inlined into d2q9-bgk.c(204,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(757,5) inlined into d2q9-bgk.c(204,3)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(770,9) inlined into d2q9-bgk.c(204,3)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(637,9):remark #34026: call to memset implemented as a call to optimized library version
d2q9-bgk.c(214,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(130,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:130

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     985
            Global    :     175
            Local     :     810
        Regenerable   :     341
        Spilled       :      26
        
    Routine stack
        Variables     :    1276 bytes*
            Reads     :      47 [1.24e+02 ~ 0.7%]
            Writes    :      13 [4.10e+01 ~ 0.2%]
        Spills        :     168 bytes*
            Reads     :      41 [2.35e+02 ~ 1.3%]
            Writes    :      32 [5.69e+01 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: propagate(const t_param, t_speed *, t_speed *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (propagate(const t_param, t_speed *, t_speed *, int, int))
  -> INLINE: (257,21) calc_ncols_from_rank(int, int, int)
  -> INLINE: (265,22) calc_ncols_from_rank(int, int, int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(272,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(273,5)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(273,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(280,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(280,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(286,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(286,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(290,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(290,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(296,3)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at d2q9-bgk.c(296,3)
<Remainder>
LOOP END

LOOP BEGIN at d2q9-bgk.c(305,5)
   remark #25261: Invariant Condition eliminated(Proven True) at line 311
   remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 312 
   remark #25260: Invariant Condition eliminated(Proven False) at line 312
LOOP END

LOOP BEGIN at d2q9-bgk.c(303,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 312

   LOOP BEGIN at d2q9-bgk.c(305,5)
      remark #25427: Loop Statements Reordered
      remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 311 
      remark #25260: Invariant Condition eliminated(Proven False) at line 311
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 312 
      remark #25260: Invariant Condition eliminated(Proven False) at line 312
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(274,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(274,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(274,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(281,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(281,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(281,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(287,57):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(287,57):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(287,57):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(291,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(291,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(291,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(297,39):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(297,39):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(297,39):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(253,1):remark #34051: REGISTER ALLOCATION : [propagate] d2q9-bgk.c:253

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     463
            Global    :      97
            Local     :     366
        Regenerable   :      30
        Spilled       :      26
        
    Routine stack
        Variables     :      20 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     160 bytes*
            Reads     :      25 [6.07e+01 ~ 1.5%]
            Writes    :      22 [3.85e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, t_speed *, t_speed *, int *, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, t_speed *, t_speed *, int *, int, int))
  -> INLINE: (213,3) accelerate_flow(const t_param, t_speed *, int *)
  -> (214,3) propagate(const t_param, t_speed *, t_speed *, int, int)
  -> INLINE: (215,3) rebound(const t_param, t_speed *, t_speed *, int *)
  -> (216,3) collision(const t_param, t_speed *, t_speed *, int *)


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(214,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(216,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(212,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:212

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :      88
            Global    :      35
            Local     :      53
        Regenerable   :      18
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [1.80e+00 ~ 0.3%]
            Writes    :       2 [1.80e+00 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collision(const t_param, t_speed *, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collision(const t_param, t_speed *, t_speed *, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(380,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(382,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(390,9)
         remark #25436: completely unrolled by 9  
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(445,9)
         remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(459,9)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(370,1):remark #34051: REGISTER ALLOCATION : [collision] d2q9-bgk.c:370

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rbp rsi rdi r8-r11 r14-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     156
            Global    :      32
            Local     :     124
        Regenerable   :      16
        Spilled       :       4
        
    Routine stack
        Variables     :      72 bytes*
            Reads     :       3 [3.75e+01 ~ 1.8%]
            Writes    :      14 [1.75e+02 ~ 8.5%]
        Spills        :      32 bytes*
            Reads     :       4 [3.60e+00 ~ 0.2%]
            Writes    :       4 [3.60e+00 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: accelerate_flow(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (accelerate_flow(const t_param, t_speed *, int *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(221,1):remark #34051: REGISTER ALLOCATION : [accelerate_flow] d2q9-bgk.c:221

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rsi rdi r8-r9 zmm0-zmm8]
        
    Routine temporaries
        Total         :      44
            Global    :      21
            Local     :      23
        Regenerable   :       8
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: rebound(const t_param, t_speed *, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (rebound(const t_param, t_speed *, t_speed *, int *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(343,1):remark #34051: REGISTER ALLOCATION : [rebound] d2q9-bgk.c:343

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rbp rsi rdi r8-r11 r13-r15]
        
    Routine temporaries
        Total         :      36
            Global    :      21
            Local     :      15
        Regenerable   :       5
        Spilled       :       5
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [4.50e+00 ~ 1.0%]
            Writes    :       5 [4.50e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: av_velocity(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (av_velocity(const t_param, t_speed *, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(481,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(483,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(491,9)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(473,1):remark #34051: REGISTER ALLOCATION : [av_velocity] d2q9-bgk.c:473

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rbp rsi rdi r8-r11 r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :      64
            Global    :      22
            Local     :      42
        Regenerable   :       5
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.70e+00 ~ 0.4%]
            Writes    :       3 [2.70e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_ncols_from_rank(int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_ncols_from_rank(int, int, int))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(679,1):remark #34051: REGISTER ALLOCATION : [calc_ncols_from_rank] d2q9-bgk.c:679

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      21
            Global    :      10
            Local     :      11
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: finalise(const t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (finalise(const t_param *, t_speed **, t_speed **, int **, float **))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(693,1):remark #34051: REGISTER ALLOCATION : [finalise] d2q9-bgk.c:693

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rbp rsi rdi r8 r12-r13]
        
    Routine temporaries
        Total         :      24
            Global    :      10
            Local     :      14
        Regenerable   :       1
        Spilled       :       4
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: calc_reynolds(const t_param, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_reynolds(const t_param, t_speed *, int *))
  -> INLINE: (717,10) av_velocity(const t_param, t_speed *, int *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(481,3) inlined into d2q9-bgk.c(717,10)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(483,5) inlined into d2q9-bgk.c(717,10)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(491,9) inlined into d2q9-bgk.c(717,10)
         remark #25436: completely unrolled by 9  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(714,1):remark #34051: REGISTER ALLOCATION : [calc_reynolds] d2q9-bgk.c:714

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   25[ rax rdx rcx rbx rbp rsi rdi r8-r11 r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :      71
            Global    :      23
            Local     :      48
        Regenerable   :       7
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [2.70e+00 ~ 0.4%]
            Writes    :       3 [2.70e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: total_density(const t_param, t_speed *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (total_density(const t_param, t_speed *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(724,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(726,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(728,7)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(728,7)
      <Remainder loop for vectorization>
         remark #25436: completely unrolled by 1  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(721,1):remark #34051: REGISTER ALLOCATION : [total_density] d2q9-bgk.c:721

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm4]
        
    Routine temporaries
        Total         :      32
            Global    :      19
            Local     :      13
        Regenerable   :       3
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, t_speed *, int *, float *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, t_speed *, int *, float *))
  -> INLINE: (752,5) die(const char *, const int, const char *)
  -> INLINE: (808,5) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(755,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(757,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(770,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(739,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:739

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0-zmm10]
        
    Routine temporaries
        Total         :     147
            Global    :      39
            Local     :     108
        Regenerable   :      47
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      64 bytes*
            Reads     :       9 [8.23e+01 ~ 5.8%]
            Writes    :       8 [2.16e+01 ~ 1.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: die(const char *, const int, const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (die(const char *, const int, const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(822,1):remark #34051: REGISTER ALLOCATION : [die] d2q9-bgk.c:822

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rbx rsi rdi]
        
    Routine temporaries
        Total         :      28
            Global    :       1
            Local     :      27
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: usage(const char *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (usage(const char *))


    Report from: Code generation optimizations [cg]

d2q9-bgk.c(830,1):remark #34051: REGISTER ALLOCATION : [usage] d2q9-bgk.c:830

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      15
            Global    :       0
            Local     :      15
        Regenerable   :       4
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **))
  -> INLINE: (539,5) die(const char *, const int, const char *)
  -> INLINE: (545,20) die(const char *, const int, const char *)
  -> INLINE: (549,20) die(const char *, const int, const char *)
  -> INLINE: (553,20) die(const char *, const int, const char *)
  -> INLINE: (557,20) die(const char *, const int, const char *)
  -> INLINE: (561,20) die(const char *, const int, const char *)
  -> INLINE: (565,20) die(const char *, const int, const char *)
  -> INLINE: (569,20) die(const char *, const int, const char *)
  -> INLINE: (596,27) die(const char *, const int, const char *)
  -> INLINE: (601,31) die(const char *, const int, const char *)
  -> INLINE: (606,31) die(const char *, const int, const char *)
  -> INLINE: (647,5) die(const char *, const int, const char *)
  -> INLINE: (654,22) die(const char *, const int, const char *)
  -> INLINE: (656,40) die(const char *, const int, const char *)
  -> INLINE: (658,40) die(const char *, const int, const char *)
  -> INLINE: (660,23) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(613,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Distributed chunk1>
      remark #25426: Loop Distributed (6 way) 
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Remainder, Distributed chunk1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Distributed chunk2>
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Remainder, Distributed chunk2>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Distributed chunk3>
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Remainder, Distributed chunk3>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Distributed chunk4>
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Remainder, Distributed chunk4>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Distributed chunk5>
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Remainder, Distributed chunk5>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Distributed chunk6>
      remark #25439: unrolled with remainder by 2  

      LOOP BEGIN at d2q9-bgk.c(625,9)
         remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(615,5)
   <Remainder, Distributed chunk6>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(633,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(635,5)
      remark #25478: While Loop Unrolled by 8  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(526,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:526

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     534
            Global    :      83
            Local     :     451
        Regenerable   :     240
        Spilled       :       7
        
    Routine stack
        Variables     :    1036 bytes*
            Reads     :       3 [1.63e+01 ~ 1.1%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [3.70e-02 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
